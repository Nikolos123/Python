"""
Задание 4.
Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему
Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.
Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.
Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""
# Вариант 1
# Решение не плохое но лучше сделать с базой даных где будет все это хранится
# Не держать статику для входа

login_password = {'admin': 12345678}
print('Сложность O(n  log n )')
print("Варинат 1 Пароль должен быть только из цифр")


def pass_logs(c, b):
    items = login_password.get(c)
    if items != None:
        if items == int(b):
            return 'Доступ разрешен'
        else:
            print(f'Доступ запрещен не верный пароль вы ввели {b}')
            return 'Доступ запрещен'
    else:
        print(f'Доступ запрещен не верный логин вы ввели {c} или пароль вы ввели {b}')
        return f'Доступ запрещен'


c = input('Введите логин ')
b = input('Введите пароль ')
answer = pass_logs(c, b)
if answer == 'Доступ разрешен':
    print(f'Поздравляем вас {c} вы ввели правильно пароль')

while answer == 'Доступ запрещен':
    a = int(input('Пройти регистрацию или повторить ввод данных для входа. 1 = повторить 0 = пройти регистрацию '))
    if a == 1:
        c = input('Введите логин ')
        b = input('Введите пароль ')
        answer = pass_logs(c, b)
        if b == 'Доступ разрешен':
            print(f'Поздравляем вас {c} вы ввели правильно пароль')
            break
    elif a == 0:
        print('Пройдите регистрацию')
        c = input('Введите логин ')
        b = input('Введите пароль ')
        login_password.setdefault(c, int(b))
        b = pass_logs(c, int(b))
        if b == 'Доступ разрешен':
            print(f'Поздравляем вас {c} вы ввели правильно пароль')
            break

# ООП  модифицированности и читаемости
print('Сложность O(n log n)')
print("Варинат 2 Пароль должен быть только из цифр")


class Reg:
    def __init__(self, a, b):
        self.a = a
        self.b = b

    def reg(self):
        login_password.setdefault(self.a, int(self.b))
        mc = Log(self.a, int(self.b))
        mc.pass_logs()


class Log:

    def __init__(self, a, b):
        self.a = a
        self.b = b

    def pass_logs(self):
        items = login_password.get(self.a)
        if items != None:
            if items == int(self.b):
                print('Доступ разрешен')
            else:
                print(f'Доступ запрещен не верный пароль вы ввели {b}')
                a = int(input(
                    'Пройти регистрацию или выйти. 1 = пройти регистрацию любой символ для выхода '))
        else:
            print(f'Доступ запрещен не верный логин вы ввели {c} или пароль вы ввели {b}')
            a = int(
                input('Пройти регистрацию или выйти. 1 = пройти регистрацию любой символ для выхода '))
            if a == 1:
                cr = input('Введите логин ')
                br = input('Введите пароль ')
                mcr = Reg(cr, br)
                mcr.reg()
            else:
                print('Досвидание')


c = input('Введите логин ')
b = input('Введите пароль ')

mc = Log(c, int(b))
mc.pass_logs()
