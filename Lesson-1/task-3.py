import json
from operator import itemgetter
"""
Задание 3.
Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему
Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""

print("Вариант 1")
print("Сложность O(n)")
# вариант через словарь быстрый так как словарь есть хэш таблица и поиск происходит быстро так как идет по ключам
a = {'Рога и копыта': 10000, 'Тест': 1232330, 'Газпром нефть': 170000, 'Рога и копыта1': 100, 'Тест2': 170,
     'Газпром нефть3': 1700010}
ab = list(a.items())
ab.sort(key=lambda i: i[1])
print(ab[-4:-1])

print("Вариант 2")
print("Сложность О(n logn n) ") # но я бы вашу слышал версию

my_json_string = """{
   "Company": [
      {
         "name":"Рога и копыта",
         "money": 10000
      },
      {
         "name":"Тест",
         "money": 1232330
      },
            {
         "name":"Газпром нефть",
         "money": 170000
      },
            {
         "name":"Рога и копыта1",
         "money": 100
      },
            {
         "name":"Тест2",
         "money": 170
      },
                  {
         "name":"Газпром нефть3",
         "money": 1700010
      }
   ]
}
"""
to_python = json.loads(my_json_string)
sort_json = list(to_python['Company'])
money = sorted(sort_json, key=itemgetter('money'))
print(money[-4:-1])

## На мой взгляд мы получаем тот же справочник но читаемость мне больше нравится jsona



# Сложность указываю всего функционала
