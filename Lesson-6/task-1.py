"""
Задание 1.
Выполните профилирование памяти в скриптах
Проанализировать результат и определить программы с
наиболее эффективным использованием памяти.
Примечание: Для анализа возьмите любые 1-3 ваших программы или несколько
вариантов кода для одной и той же задачи. Можно взять задачи с курса Основ или с текущего курса Алгоритмов
Результаты анализа вставьте в виде комментариев к коду.
Также укажите в комментариях версию Python и разрядность вашей ОС.
ВНИМАНИЕ: ЗАДАНИЯ, В КОТОРЫХ БУДУТ ГОЛЫЕ ЦИФРЫ ЗАМЕРОВ (БЕЗ АНАЛИТИКИ)
БУДУТ ПРИНИМАТЬСЯ С ОЦЕНКОЙ УДОВЛЕТВОРИТЕЛЬНО
"""

from memory_profiler import profile
from timeit import timeit
from random import randint

@profile
from timeit import timeit
from random import randint


def recursive_reverse(number):
    if number == 0:
        return ''
    return f'{str(number % 10)}{recursive_reverse(number // 10)}'


num_100 = randint(10000, 1000000)
num_1000 = randint(1000000, 10000000)
num_10000 = randint(100000000, 10000000000000)

print('Не оптимизированная функция recursive_reverse')
print(
    timeit(
        "recursive_reverse(num_100)",
        setup='from __main__ import recursive_reverse, num_100',
        number=10000))
del num_100
print(
    timeit(
        "recursive_reverse(num_1000)",
        setup='from __main__ import recursive_reverse, num_1000',
        number=10000))
del num_1000
print(
    timeit(
        "recursive_reverse(num_10000)",
        setup='from __main__ import recursive_reverse, num_10000',
        number=10000))

# Просто пример из головы для понимания
@profile
def myfunc():
    b = range(1,10000)
    a = [i for i in b if i%2 ==0]
    print(a)
    del b
    c = [i for i in a if i > 30]
    del a
    print(c)
if __name__ =='main':
    myfunc()

#Мы делали замериы и у нас был приблизительно такой код
#Анализ текущего кода что мы не только замеряем выполенния кода с различными итерациями но и вцелом измерим сколько нам нужно памяти для этого
#Подключая профилировшик и после каждого использования переменной мы будем ее удалять так как в 3 переменной лежат значительные данные
#И после выполнения мы каждого замера мы сэкономим память так как переменная нам посути уже не будет нужна
#Цифры профилировшика привести не смог так как на linux 64  ubuntu почему то не встал пакет((( попробую потом на винде
#Но если верить документации то все мои выше сказанные слова верны даже без замеров.
#Также сделал 1 просто пример для того что бы показать что я понимаю о чем диет речь
